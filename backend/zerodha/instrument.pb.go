// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: zerodha/instrument.proto

package zerodha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Instrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentToken string `protobuf:"bytes,1,opt,name=instrument_token,json=instrumentToken,proto3" json:"instrument_token,omitempty"`
	ExchangeToken   string `protobuf:"bytes,2,opt,name=exchange_token,json=exchangeToken,proto3" json:"exchange_token,omitempty"`
	Tradingsymbol   string `protobuf:"bytes,3,opt,name=tradingsymbol,proto3" json:"tradingsymbol,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	LastPrice       string `protobuf:"bytes,5,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	Expiry          string `protobuf:"bytes,6,opt,name=expiry,proto3" json:"expiry,omitempty"`
	StrikePrice     string `protobuf:"bytes,7,opt,name=strike_price,json=strikePrice,proto3" json:"strike_price,omitempty"`
	TickSize        string `protobuf:"bytes,8,opt,name=tick_size,json=tickSize,proto3" json:"tick_size,omitempty"`
	LotSize         string `protobuf:"bytes,9,opt,name=lot_size,json=lotSize,proto3" json:"lot_size,omitempty"`
	InstrumentType  string `protobuf:"bytes,10,opt,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty"`
	Segment         string `protobuf:"bytes,11,opt,name=segment,proto3" json:"segment,omitempty"`
	Exchange        string `protobuf:"bytes,12,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	mi := &file_zerodha_instrument_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_zerodha_instrument_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_zerodha_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *Instrument) GetInstrumentToken() string {
	if x != nil {
		return x.InstrumentToken
	}
	return ""
}

func (x *Instrument) GetExchangeToken() string {
	if x != nil {
		return x.ExchangeToken
	}
	return ""
}

func (x *Instrument) GetTradingsymbol() string {
	if x != nil {
		return x.Tradingsymbol
	}
	return ""
}

func (x *Instrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instrument) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *Instrument) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *Instrument) GetStrikePrice() string {
	if x != nil {
		return x.StrikePrice
	}
	return ""
}

func (x *Instrument) GetTickSize() string {
	if x != nil {
		return x.TickSize
	}
	return ""
}

func (x *Instrument) GetLotSize() string {
	if x != nil {
		return x.LotSize
	}
	return ""
}

func (x *Instrument) GetInstrumentType() string {
	if x != nil {
		return x.InstrumentType
	}
	return ""
}

func (x *Instrument) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *Instrument) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type InstrumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruments []*Instrument `protobuf:"bytes,1,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *InstrumentList) Reset() {
	*x = InstrumentList{}
	mi := &file_zerodha_instrument_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstrumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentList) ProtoMessage() {}

func (x *InstrumentList) ProtoReflect() protoreflect.Message {
	mi := &file_zerodha_instrument_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentList.ProtoReflect.Descriptor instead.
func (*InstrumentList) Descriptor() ([]byte, []int) {
	return file_zerodha_instrument_proto_rawDescGZIP(), []int{1}
}

func (x *InstrumentList) GetInstruments() []*Instrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

var File_zerodha_instrument_proto protoreflect.FileDescriptor

var file_zerodha_instrument_proto_rawDesc = []byte{
	0x0a, 0x18, 0x7a, 0x65, 0x72, 0x6f, 0x64, 0x68, 0x61, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x7a, 0x65, 0x72, 0x6f,
	0x64, 0x68, 0x61, 0x22, 0x89, 0x03, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0x47, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x65, 0x72, 0x6f, 0x64, 0x68, 0x61,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x7a, 0x65,
	0x72, 0x6f, 0x64, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zerodha_instrument_proto_rawDescOnce sync.Once
	file_zerodha_instrument_proto_rawDescData = file_zerodha_instrument_proto_rawDesc
)

func file_zerodha_instrument_proto_rawDescGZIP() []byte {
	file_zerodha_instrument_proto_rawDescOnce.Do(func() {
		file_zerodha_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(file_zerodha_instrument_proto_rawDescData)
	})
	return file_zerodha_instrument_proto_rawDescData
}

var file_zerodha_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_zerodha_instrument_proto_goTypes = []any{
	(*Instrument)(nil),     // 0: zerodha.Instrument
	(*InstrumentList)(nil), // 1: zerodha.InstrumentList
}
var file_zerodha_instrument_proto_depIdxs = []int32{
	0, // 0: zerodha.InstrumentList.instruments:type_name -> zerodha.Instrument
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_zerodha_instrument_proto_init() }
func file_zerodha_instrument_proto_init() {
	if File_zerodha_instrument_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zerodha_instrument_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zerodha_instrument_proto_goTypes,
		DependencyIndexes: file_zerodha_instrument_proto_depIdxs,
		MessageInfos:      file_zerodha_instrument_proto_msgTypes,
	}.Build()
	File_zerodha_instrument_proto = out.File
	file_zerodha_instrument_proto_rawDesc = nil
	file_zerodha_instrument_proto_goTypes = nil
	file_zerodha_instrument_proto_depIdxs = nil
}

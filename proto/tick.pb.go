// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.0
// source: proto/tick.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TickData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic info
	InstrumentToken       uint32  `protobuf:"varint,1,opt,name=instrument_token,json=instrumentToken,proto3" json:"instrument_token,omitempty"`
	ExchangeUnixTimestamp int64   `protobuf:"varint,2,opt,name=exchange_unix_timestamp,json=exchangeUnixTimestamp,proto3" json:"exchange_unix_timestamp,omitempty"`
	LastPrice             float64 `protobuf:"fixed64,3,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	OpenInterest          uint32  `protobuf:"varint,4,opt,name=open_interest,json=openInterest,proto3" json:"open_interest,omitempty"`
	VolumeTraded          uint32  `protobuf:"varint,5,opt,name=volume_traded,json=volumeTraded,proto3" json:"volume_traded,omitempty"`
	AverageTradePrice     float64 `protobuf:"fixed64,6,opt,name=average_trade_price,json=averageTradePrice,proto3" json:"average_trade_price,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TickData) Reset() {
	*x = TickData{}
	mi := &file_proto_tick_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickData) ProtoMessage() {}

func (x *TickData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tick_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickData.ProtoReflect.Descriptor instead.
func (*TickData) Descriptor() ([]byte, []int) {
	return file_proto_tick_proto_rawDescGZIP(), []int{0}
}

func (x *TickData) GetInstrumentToken() uint32 {
	if x != nil {
		return x.InstrumentToken
	}
	return 0
}

func (x *TickData) GetExchangeUnixTimestamp() int64 {
	if x != nil {
		return x.ExchangeUnixTimestamp
	}
	return 0
}

func (x *TickData) GetLastPrice() float64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *TickData) GetOpenInterest() uint32 {
	if x != nil {
		return x.OpenInterest
	}
	return 0
}

func (x *TickData) GetVolumeTraded() uint32 {
	if x != nil {
		return x.VolumeTraded
	}
	return 0
}

func (x *TickData) GetAverageTradePrice() float64 {
	if x != nil {
		return x.AverageTradePrice
	}
	return 0
}

type BatchMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                     // When this batch was created
	BatchSize     int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`    // Number of ticks in batch
	RetryCount    int32                  `protobuf:"varint,3,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"` // Number of retry attempts for this batch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMetadata) Reset() {
	*x = BatchMetadata{}
	mi := &file_proto_tick_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMetadata) ProtoMessage() {}

func (x *BatchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tick_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMetadata.ProtoReflect.Descriptor instead.
func (*BatchMetadata) Descriptor() ([]byte, []int) {
	return file_proto_tick_proto_rawDescGZIP(), []int{1}
}

func (x *BatchMetadata) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BatchMetadata) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *BatchMetadata) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

type TickBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticks         []*TickData            `protobuf:"bytes,1,rep,name=ticks,proto3" json:"ticks,omitempty"`       // Array of tick data
	Metadata      *BatchMetadata         `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"` // Metadata about this batch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickBatch) Reset() {
	*x = TickBatch{}
	mi := &file_proto_tick_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickBatch) ProtoMessage() {}

func (x *TickBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tick_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickBatch.ProtoReflect.Descriptor instead.
func (*TickBatch) Descriptor() ([]byte, []int) {
	return file_proto_tick_proto_rawDescGZIP(), []int{2}
}

func (x *TickBatch) GetTicks() []*TickData {
	if x != nil {
		return x.Ticks
	}
	return nil
}

func (x *TickBatch) GetMetadata() *BatchMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_tick_proto protoreflect.FileDescriptor

const file_proto_tick_proto_rawDesc = "" +
	"\n" +
	"\x10proto/tick.proto\x12\x02pb\"\x86\x02\n" +
	"\bTickData\x12)\n" +
	"\x10instrument_token\x18\x01 \x01(\rR\x0finstrumentToken\x126\n" +
	"\x17exchange_unix_timestamp\x18\x02 \x01(\x03R\x15exchangeUnixTimestamp\x12\x1d\n" +
	"\n" +
	"last_price\x18\x03 \x01(\x01R\tlastPrice\x12#\n" +
	"\ropen_interest\x18\x04 \x01(\rR\fopenInterest\x12#\n" +
	"\rvolume_traded\x18\x05 \x01(\rR\fvolumeTraded\x12.\n" +
	"\x13average_trade_price\x18\x06 \x01(\x01R\x11averageTradePrice\"m\n" +
	"\rBatchMetadata\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\x12\x1f\n" +
	"\vretry_count\x18\x03 \x01(\x05R\n" +
	"retryCount\"^\n" +
	"\tTickBatch\x12\"\n" +
	"\x05ticks\x18\x01 \x03(\v2\f.pb.TickDataR\x05ticks\x12-\n" +
	"\bmetadata\x18\x02 \x01(\v2\x11.pb.BatchMetadataR\bmetadataB\tZ\a./protob\x06proto3"

var (
	file_proto_tick_proto_rawDescOnce sync.Once
	file_proto_tick_proto_rawDescData []byte
)

func file_proto_tick_proto_rawDescGZIP() []byte {
	file_proto_tick_proto_rawDescOnce.Do(func() {
		file_proto_tick_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_tick_proto_rawDesc), len(file_proto_tick_proto_rawDesc)))
	})
	return file_proto_tick_proto_rawDescData
}

var file_proto_tick_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_tick_proto_goTypes = []any{
	(*TickData)(nil),      // 0: pb.TickData
	(*BatchMetadata)(nil), // 1: pb.BatchMetadata
	(*TickBatch)(nil),     // 2: pb.TickBatch
}
var file_proto_tick_proto_depIdxs = []int32{
	0, // 0: pb.TickBatch.ticks:type_name -> pb.TickData
	1, // 1: pb.TickBatch.metadata:type_name -> pb.BatchMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_tick_proto_init() }
func file_proto_tick_proto_init() {
	if File_proto_tick_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_tick_proto_rawDesc), len(file_proto_tick_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_tick_proto_goTypes,
		DependencyIndexes: file_proto_tick_proto_depIdxs,
		MessageInfos:      file_proto_tick_proto_msgTypes,
	}.Build()
	File_proto_tick_proto = out.File
	file_proto_tick_proto_goTypes = nil
	file_proto_tick_proto_depIdxs = nil
}
